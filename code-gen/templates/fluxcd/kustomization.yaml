kind: Kustomization
apiVersion: kustomize.config.k8s.io/v1beta1

resources:

# Include the CD tool here so it can update itself in the future
- ${K8S_GIT_URL}/k8s-configs/cluster-tools/base/git-ops?ref=${K8S_GIT_BRANCH}

# Deploy cert-manager as part of the bootstrap process so that it's running before its CRD resources are created
- ${K8S_GIT_URL}/k8s-configs/cluster-tools/base/cert-manager/base?ref=${K8S_GIT_BRANCH}

# Deploy sealed-secrets controller so it's up and ready before ping-cloud namespace is created
- ${K8S_GIT_URL}/k8s-configs/cluster-tools/base/security?ref=${K8S_GIT_BRANCH}

# The minimal bootstrap required for the ping-cloud stack
- ping-cloud.yaml

# Deploy the CD application
- argo-application.yaml

patchesStrategicMerge:

### Known hosts file for cloning the cluster state repo over SSH ###
- |-
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: argocd-ssh-known-hosts-cm
    namespace: argocd
  data:
    ssh_known_hosts: |-
      ${KNOWN_HOSTS_CLUSTER_STATE_REPO}

### Deploy key to the cluster state repo ###
- |-
  apiVersion: v1
  kind: Secret
  type: Opaque
  metadata:
    name: argo-git-deploy
    namespace: argocd
  data:
    identity: |
      ${SSH_ID_KEY_BASE64}

patchesJson6902:

### Cluster state repo URL and auth configuration for the CD tool ###
- target:
    version: v1
    kind: ConfigMap
    name: argocd-cm
    namespace: argocd
  patch: |
    - op: add
      path: /data/repositories
      value: |
        - url: ${CLUSTER_STATE_REPO_URL}
          type: git
          sshPrivateKeySecret:
            name: argo-git-deploy
            key: identity
    - op: add
      path: /data/timeout.reconciliation
      value: 60s
