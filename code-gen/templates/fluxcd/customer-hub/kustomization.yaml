kind: Kustomization
apiVersion: kustomize.config.k8s.io/v1beta1

resources:

# Include the CD tool here so it can update itself in the future
- ${K8S_GIT_URL}/k8s-configs/cluster-tools/base/git-ops?ref=${K8S_GIT_BRANCH}

# Deploy cert-manager as part of the bootstrap process so that it's running before its CRD resources are created
- ${K8S_GIT_URL}/k8s-configs/cluster-tools/base/cert-manager/base?ref=${K8S_GIT_BRANCH}

# Deploy sealed-secrets controller so it's up and ready before ping-cloud namespace is created
- ${K8S_GIT_URL}/k8s-configs/cluster-tools/base/security?ref=${K8S_GIT_BRANCH}

# generate-cluster-state.sh copies this from code-gen/templates/fluxcd/common/
# The minimal bootstrap required for the ping-cloud stack
- ping-cloud.yaml

# generate-cluster-state.sh copies this from code-gen/templates/customer-hub/base/cluster-tools/git-ops/
# Create all argo applications
- argocd-application-set.yaml

patchesStrategicMerge:
# generate-cluster-state.sh copies this from code-gen/templates/customer-hub/base/cluster-tools/git-ops/
- argocd-strategic-patches.yaml

### Deploy key to the cluster state repo ###
- |-
  apiVersion: v1
  kind: Secret
  type: Opaque
  metadata:
    name: argo-git-deploy
    namespace: argocd
  data:
    identity: |
      ${SSH_ID_KEY_BASE64}

patchesJson6902:

### Cluster state repo URL and auth configuration for the CD tool ###
- target:
    version: v1
    kind: ConfigMap
    name: argocd-cm
    namespace: argocd
  # generate-cluster-state.sh copies this from code-gen/templates/customer-hub/base/cluster-tools/git-ops/
  path: argocd-cm-patch.yaml

configMapGenerator:
  - name: argocd-bootstrap
    namespace: argocd
    behavior: merge
    envs:
      - env_vars
    # Bootstrap must be enabled and this var will normally come from regional env vars once bootstrapped
    literals:
      - ARGOCD_BOOTSTRAP_ENABLED=true
    options:
      disableNameSuffixHash: true