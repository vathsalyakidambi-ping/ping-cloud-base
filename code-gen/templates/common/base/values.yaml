########################################################################################################################
# Customer parameters that are shared by multiple apps
########################################################################################################################

########################################################
# Multi-region parameters
########################################################
isMultiCluster: ${IS_MULTI_CLUSTER}

# primaryRegion is the primary AWS region name
# the primary region should have the same value for region and primaryRegion
primaryRegion: "${PRIMARY_REGION}"

# primaryDnsZone is the primary dns zone for customer for region
primaryDnsZone: "${PRIMARY_DNS_ZONE}"

# primaryTenantDomain is the primary domain suffix for customer for region
# the primary region should have the same value for tenantDomain and primaryTenantDomain
primaryTenantDomain: "${PRIMARY_TENANT_DOMAIN}"

# secondaryTenantDomains is an optional comma-separated list of the tenant domain suffixes of secondary regions used
# for PingFederate adaptive clustering using the JGroups DNS_PING discovery protocol:
#
#   - Do NOT include the primary tenant domain in the list
#   - Do NOT include the CDE prefix in the domain name
#
# For example, if the primary domain is "tuna.us1.ping-preview.cloud", then set it
# to "tuna.eu1.ping-preview.cloud,tuna.au1.ping-preview.cloud" to specify secondary
# domains in regions eu1 and au1.
#
# NOTES:
#   - Only used in multi-cluster environments. If provided, PF will be configured with DNS_PING.
#   - It is recommended that SECONDARY_TENANT_DOMAINS be set apriori, even before the
#     secondary regions are created to avoid pod rollouts. DNS_PING will simply ignore
#     unreachable domains. If it is not set beforehand, then all servers in the PF
#     cluster (admin and engines) must be re-rolled to pick up the change.
secondaryTenantDomains: "${SECONDARY_TENANT_DOMAINS}"

# globalTenantDomain is the region-independent URL used for DNS failover/routing
globalTenantDomain: "${GLOBAL_TENANT_DOMAIN}"


########################################################
# S3 buckets
########################################################
# pingArtifactRepoUrl is the ping-hosted common artifacts URL
pingArtifactRepoUrl: "${PING_ARTIFACT_REPO_URL}"

# logArchiveUrl is the customer-specific log URL for region
logArchiveUrl: "${LOG_ARCHIVE_URL}"

# backupUrl is the customer-specific backup URL for region
backupUrl: "${BACKUP_URL}"


########################################################
# Miscellaneous ping-cloud-base variables
########################################################
# pingCloudNamespace is the namespace where Ping apps are deployed
pingCloudNamespace: "${PING_CLOUD_NAMESPACE}"

# k8sGitUrl is the ping-cloud-base git URL for base Kubernetes manifests
k8sGitUrl: "${K8S_GIT_URL}"

# k8sGitBranch is the ping-cloud-base git branch for base Kubernetes manifests
k8sGitBranch: "${K8S_GIT_BRANCH}"

# ecrRegistryName is the name of the Docker image registry
ecrRegistryName: "${ECR_REGISTRY_NAME}"

# ecr_env is the suffix used to denote to use dev image repositories
ecrEnv: "/dev"

# clusterName is the eks cluster name
clusterName: "${CLUSTER_NAME}"

# serverProfileUrl is the git URL for the profile repo
serverProfileUrl: "${SERVER_PROFILE_URL}"

# serverProfileBranch is the git branch for the profile repo
serverProfileBranch: "${SERVER_PROFILE_BRANCH_DERIVED}"

# userBaseDN is the variable used by Ping products
userBaseDN: "${USER_BASE_DN}"

# Multiple Backend IDs
userBackendId2: "userRoot_2"
userBackendId3: "userRoot_3"
userBackendId4: "userRoot_4"
userBackendId5: "userRoot_5"


# Multiple Backend IDs Base DNs
userBaseDN2: "${USER_BASE_DN_2}"
userBaseDN3: "${USER_BASE_DN_3}"
userBaseDN4: "${USER_BASE_DN_4}"
userBaseDN5: "${USER_BASE_DN_5}"

########################################################
# Environment-specific variables
########################################################
# environmentType is used by server profile hooks
environmentType: "${ENVIRONMENT_TYPE}"

# env is used by Kubernetes manifests
env: "${ENV}"

isBelugaEnv: ${IS_BELUGA_ENV}


########################################################
# DevOps License environment variables
########################################################
pingIdentityDevopsUser: "${PING_IDENTITY_DEVOPS_USER}"
pingIdentityDevopsKey: "${PING_IDENTITY_DEVOPS_KEY}"


########################################################
# Ping image tags
########################################################
pingaccessImageTag: "v1.18-release-branch-latest"
pingaccessWasImageTag: "v1.18-release-branch-latest"
pingfederateImageTag: "v1.18-release-branch-latest"
pingdirectoryImageTag: "v1.18-release-branch-latest"
pingdelegatorImageTag: "v1.18-release-branch-latest"
pingcentralImageTag: "v1.18-release-branch-latest"
pingdatasyncImageTag: "v1.18-release-branch-latest"
metadataImageTag: "v1.18-release-branch-latest"
bootstrapImageTag: "v1.18-release-branch-latest"
healthcheckImageTag: "v1.18-release-branch-latest"
p14cIntegrationImageTag: "v1.18-release-branch-latest"


########################################################
# Public hostnames
########################################################
pdPrimaryPublicHostname: "pingdirectory-admin.${PRIMARY_DNS_ZONE_DERIVED}"
pfAdminPublicHostname: "pingfederate-admin.${PRIMARY_DNS_ZONE_DERIVED}"
pfAdminApiPublicHostname: "pingfederate-admin-api.${PRIMARY_DNS_ZONE_DERIVED}"
paAdminPublicHostname: "pingaccess-admin.${PRIMARY_DNS_ZONE_DERIVED}"
paAdminApiPublicHostname: "pingaccess-admin-api.${PRIMARY_DNS_ZONE_DERIVED}"
pawasAdminPublicHostname: "pingaccess-was-admin.${PRIMARY_DNS_ZONE_DERIVED}"
pcAdminPublicHostname: "pingcentral-admin.${PRIMARY_DNS_ZONE_DERIVED}"
pcAdminPrivateSiteHostname: "pingcentral.${PRIMARY_TENANT_DOMAIN}"
pdClusterPublicHostname: "pingdirectory-cluster.${PRIMARY_DNS_ZONE_DERIVED}"
pfClusterPublicHostname: "pingfederate-cluster.${PRIMARY_DNS_ZONE_DERIVED}"
paClusterPublicHostname: "pingaccess-cluster.${PRIMARY_DNS_ZONE_DERIVED}"
pawasClusterPublicHostname: "pingaccess-was-cluster.${PRIMARY_DNS_ZONE_DERIVED}"

# Ping engine hostname variables
pdPublicHostname: "pingdirectory-admin.${DNS_ZONE_DERIVED}"
pdHttpPublicHostname: "pingdirectory.${DNS_ZONE_DERIVED}"
pdDelegatorPublicHostname: "pingdelegator.${DNS_ZONE_DERIVED}"
pdDelegatorPublicPort: 443
pfEnginePublicHostname: "pingfederate.${DNS_ZONE_DERIVED}"
paEnginePublicHostname: "pingaccess.${DNS_ZONE_DERIVED}"
pawasEnginePublicHostname: "pingaccess-was.${DNS_ZONE_DERIVED}"

prometheusPublicHostname: "prometheus.${DNS_ZONE_DERIVED}"
grafanaPublicHostname: "monitoring.${DNS_ZONE_DERIVED}"
kibanaPublicHostname: "logs.${DNS_ZONE_DERIVED}"
argocdPublicHostname: "argocd.${DNS_ZONE_DERIVED}"

healthcheckHttpbinPawasPublicHostname: "healthcheck-httpbin-pa-was.${DNS_ZONE_DERIVED}"
healthcheckHttpbinPaPublicHostname: "healthcheck-httpbin-pa.${DNS_ZONE_DERIVED}"


#### FEATURE FLAGS #####################################################################################################
# Set to true to enable, most are disabled by default
# Please follow runbook instructions for the given feature flag to enable/disable

# !!! Provisioning for PingFederate is not yet available for multi-region customers !!!
# Runbook: https://confluence.pingidentity.com/display/PingCloud/How+to+Enable+and+Configure+PingFederate+Provisioning
pfProvisioningEnabled: ${PF_PROVISIONING_ENABLED}

radiusProxyEnabled: ${RADIUS_PROXY_ENABLED}

external_ingress_enabled: ${EXTERNAL_INGRESS_ENABLED}
########################################################################################################################




########################################################################################################################
#TODO: Are these needed anymore now that we're using values files?
# If they are needed uncomment & move to the 1st section
# If they are still commented out when we get to PDO-4842, they will be deleted
########################################################################################################################
# kustomizeBase: ${KUSTOMIZE_BASE}

# ansibleBelugaImageTag: v1.18-release-branch-latest

# clusterNameLc: ${CLUSTER_NAME_LC} # Helm has a "lower" function that can be used with clusterName


########################################################################################################################
#TODO: Move these to app values.yaml files as apps migrate
# If they are needed by more than 1 app, move to the 1st section
########################################################################################################################
# pgoBackupBucketName is the customer-specific pgo bucket name for region
pgoBackupBucketName: "${PGO_BACKUP_BUCKET_NAME}"

############################################################
# Platform event queue and SSM variables
############################################################
platformEventQueueName: "${PLATFORM_EVENT_QUEUE_NAME}"
platformEventQueuePollBatchSize: 1
platformEventQueuePollIntervalSeconds: 2
orchAPISSMPathPrefix: "${ORCH_API_SSM_PATH_PREFIX}"
serviceSSMPathPrefix: "${SERVICE_SSM_PATH_PREFIX}"

############################################################
# Cluster state repo details
############################################################
# knownHostsClusterStateRepo is the known-hosts file to trust the cluster state repo server for git/ssh cloning
knownHostsClusterStateRepo: "${KNOWN_HOSTS_CLUSTER_STATE_REPO}"

# clusterStateRepoUrl is the Cluster State Repo URL
clusterStateRepoUrl: "${CLUSTER_STATE_REPO_URL}"

# clusterStateRepoBranch is the Cluster State Repo branch
clusterStateRepoBranch: "${CLUSTER_STATE_REPO_BRANCH}"

# appResyncSeconds is the application reconciliation timeout in seconds for ArgoCD, i.e. how frequently
# ArgoCD should poll the cluster-state-repo for changes. To disable reconciliation set it to 0.
appResyncSeconds: 60

# Current app logs destination (True :  CW, False :  ELK)
legacyLogging: False

############################################################
# Lets Encrypt server
############################################################
letsEncryptServer: "${LETS_ENCRYPT_SERVER}"

############################################################
# PingFederate variables for environment
############################################################
pfPdBindPort: ${PF_PD_BIND_PORT}
pfPdBindProtocol: "${PF_PD_BIND_PROTOCOL}"
pfPdBindUseSsl: ${PF_PD_BIND_USESSL}

pfMinHeap: ${PF_MIN_HEAP}
pfMaxHeap: ${PF_MAX_HEAP}
pfMinYgen: ${PF_MIN_YGEN}
pfMaxYgen: ${PF_MAX_YGEN}

# This variable's value will make it onto the branding for the PF admin console and
# will include the name of the environment and the region where it's deployed.
pfAdminConsoleEnvironment: "${ADMIN_CONSOLE_BRANDING}"

############################################################
# PingAccess variables for environment
############################################################
pawasMinHeap: ${PA_WAS_MIN_HEAP}
pawasMaxHeap: ${PA_WAS_MAX_HEAP}
pawasMinYgen: ${PA_WAS_MIN_YGEN}
pawasMaxYgen: ${PA_WAS_MAX_YGEN}
pawasGcoption: ${PA_WAS_GCOPTION}

paMinHeap: ${PA_MIN_HEAP}
paMaxHeap: ${PA_MAX_HEAP}
paMinYgen: ${PA_MIN_YGEN}
paMaxYgen: ${PA_MAX_YGEN}
paGcoption: ${PA_GCOPTION}

# Retention time for Prometheus. Could be set in years(y), weeks(w), days(d), hours(h), minutes(m) or seconds(s)
prometheusRetentionTime: "15d"

# Commands and schedules to obtain users count. Values should be in single quotes. Schedules should be in cron format. Command should return only numeric value(int\float)
prometheusUserCount1Command: 'echo 0'
prometheusUserCount1Schedule: '* * * * *'
prometheusUserCount2Command: 'echo 0'
prometheusUserCount2Schedule: '* * * * *'
prometheusUserCount3Command: 'echo 0'
prometheusUserCount3Schedule: '* * * * *'
prometheusUserCount4Command: 'echo 0'
prometheusUserCount4Schedule: '* * * * *'

# Variable to have ping-cloud namespace in prometheus-job-exporter
prometheusPingNamespace: "${PING_CLOUD_NAMESPACE}"

# Default argo-events notification configuration
notificationEnabled: false
slackChannel: "${SLACK_CHANNEL}"
notificationEndpoint: "http://webhook-eventsource-svc.argo-events:12999/notification"

# Prometheus argo-events notification configuration
promNotificationEnabled: true
promSlackChannel: "${PROM_SLACK_CHANNEL}"

# Variables used by argocd-image-updater to automatically update the container images managed by ArgoCD
imageTagPrefix: "${IMAGE_TAG_PREFIX}"
imageList: "apps: ${ECR_REGISTRY_NAME}/pingcloud-apps/pingfederate,apps: ${ECR_REGISTRY_NAME}/pingcloud-apps/pingaccess,apps: ${ECR_REGISTRY_NAME}/pingcloud-apps/pingaccess-was"

# Dashboards repo variables
dashRepoUrl: "https://github.com/pingidentity/ping-cloud-dashboards"
dashRepoBranch: "v1.18-dev-branch"
