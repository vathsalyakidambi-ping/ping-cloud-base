apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: logstash-elastic
  template:
    metadata:
      labels:
        app: logstash-elastic
    spec:
      serviceAccountName: logstash-elastic
      initContainers:
        - name: check-service-availability
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap/dev:v1.18-release-branch-latest
          imagePullPolicy: Always
          command:
            - sh
            - $(CONTAINER_NAME).sh
          env:
            - name: CONTAINER_NAME
              value: check-service-availability
            - name: CHECK_SERVICE_URL
              value: 'http://elasticsearch'
            - name: CHECK_SERVICE_PORT
              value: '9200'
            - name: DESIRED_STATUS
              value: green
        - name: wait-for-bootstrap-completed
          securityContext:
            runAsGroup: 2000
            runAsNonRoot: true
            runAsUser: 1000
            allowPrivilegeEscalation: false
          image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/bitnami/kubectl:1.23.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - '-c'
            - >-
              kubectl wait --for=condition=complete --timeout=300s -n
              elastic-stack-logging job/logging-bootstrap
        - name: create-enrichment-cache-files
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap/dev:v1.18-release-branch-latest
          imagePullPolicy: Always
          workingDir: /scripts
          command:
            - sh
            - $(CONTAINER_NAME).sh
          env:
            - name: CONTAINER_NAME
              value: create-enrichment-cache-files
            - name: ENRICHMENT_TOR_FEED_URL
              value: 'https://check.torproject.org/exit-addresses'
            - name: ENRICHMENT_ALIEN_VAULT_FEED_URL
              value: 'https://reputation.alienvault.com/reputation.generic'
            - name: ENRICHMENT_FILEPATH
              value: /enrichment-cache-files/
            - name: PYTHONUNBUFFERED
              value: '1'
            - name: PYTHONIOENCODING
              value: UTF-8
          volumeMounts:
            - name: enrichment-cache
              mountPath: /enrichment-cache
            - name: enrichment-cache-files
              mountPath: /enrichment-cache-files
      containers:
        - name: exporter
          image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/prom/logstash-exporter:v0.0.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9198
              name: metrics
              protocol: TCP
        - name: logstash
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/logstash/dev:v1.18-release-branch-latest
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          env:
            - name: CONTAINER_NAME
              value: logstash
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CONFIG_RELOAD_AUTOMATIC
              value: 'true'
            - name: CONFIG_RELOAD_INTERVAL
              value: 5s
            - name: LOG_FORMAT
              value: json
            - name: PIPELINE_BATCH_DELAY
              value: '20'
            - name: PIPELINE_BATCH_SIZE
              value: '100'
            - name: PIPELINE_ECS_COMPATIBILITY
              value: disabled
            - name: PIPELINE_ORDERED
              value: 'false'
            - name: QUEUE_TYPE
              value: persisted
            - name: QUEUE_MAX_BYTES
              value: 1000gb
          envFrom:
            - configMapRef:
                name: elk-environment-variables
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9600
            initialDelaySeconds: 300
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9600
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 3
            timeoutSeconds: 5
          resources:
            limits:
              cpu: "500m"
              memory: 4Gi
            requests:
              cpu: "150m"
              memory: 1Gi
          ports:
            - containerPort: 9600
              name: rest
              protocol: TCP
            - containerPort: 8080
              name: http-log-input
              protocol: TCP
          volumeMounts:
            - name: logstash-pipelines
              mountPath: /usr/share/logstash/config/pipelines.yml
              subPath: pipelines.yml
              readOnly: true
            - name: logstash-pipeline-main
              mountPath: /usr/share/logstash/pipeline/main
              readOnly: true
            - name: logstash-pipeline-customer
              mountPath: /usr/share/logstash/pipeline/customer
              readOnly: true
            - name: logstash-pipeline-alerts
              mountPath: /usr/share/logstash/pipeline/alerts
              readOnly: true
            - name: enrichment-logstash-search-templates
              mountPath: /etc/logstash/templates
              readOnly: true
            - name: enrichment-elasticsearch-index-templates
              mountPath: /usr/share/logstash/index_templates
              readOnly: true
            - name: enrichment-cache-files
              mountPath: /enrichment-cache-files
              readOnly: false
            - name: logstash-efs
              mountPath: /usr/share/logstash/data/queue
              readOnly: false
        # Sidecar enrichment container which updates Logstash dictionaries
        - name: enrichment-sidecar
          image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/enrichment-bootstrap/dev:v1.18-release-branch-latest
          imagePullPolicy: Always
          workingDir: /scripts
          command:
            - sh
            - $(CONTAINER_NAME).sh
          env:
            - name: CONTAINER_NAME
              value: enrichment-sidecar
            - name: ENRICHMENT_TOR_FEED_URL
              value: 'https://check.torproject.org/exit-addresses'
            - name: ENRICHMENT_ALIEN_VAULT_FEED_URL
              value: 'https://reputation.alienvault.com/reputation.generic'
            - name: ENRICHMENT_FILEPATH
              value: /enrichment-cache-files/
            - name: ENRICHMENT_DELAY_SECONDS
              value: '600'
            - name: PYTHONUNBUFFERED
              value: '1'
            - name: PYTHONIOENCODING
              value: UTF-8
          volumeMounts:
            - name: enrichment-cache-files
              mountPath: /enrichment-cache-files
              readOnly: false
          resources:
            limits:
              cpu: "500m"
              memory: 500Mi
            requests:
              cpu: "150m"
              memory: 100Mi
      terminationGracePeriodSeconds: 30
      volumes:
        - name: logstash-pipeline-main
          configMap:
            name: logstash-pipeline-main
        - name: logstash-pipeline-customer
          configMap:
            name: logstash-pipeline-customer
        - name: logstash-pipeline-alerts
          configMap:
            name: logstash-pipeline-alerts
        - name: logstash-pipelines
          configMap:
            name: logstash-pipelines
        - name: enrichment-logstash-search-templates
          configMap:
            name: enrichment-logstash-search-templates
        - name: enrichment-elasticsearch-index-templates
          configMap:
            name: enrichment-elasticsearch-index-templates
        - name: enrichment-cache
          configMap:
            name: enrichment-cache
        - name: enrichment-cache-files
          emptyDir: {}
  serviceName: logstash-elastic
  volumeClaimTemplates:
    - metadata:
        name: logstash-efs
        labels:
          app: logstash-elastic
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: efs
        resources:
          requests:
            storage: 1Mi


---
kind: Service
apiVersion: v1
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic
spec:
  selector:
    app: logstash-elastic
  ports:
    - port: 9600
      name: rest
    - port: 8080
      name: http-log-input
    - port: 9198
      name: metrics

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: logstash-elastic
  labels:
    app: logstash-elastic
rules:
- apiGroups:
  - ""
  - "batch"
  resources:
  - pods
  - namespaces
  - jobs
  verbs:
  - get
  - list
  - watch
  
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: logstash-elastic
roleRef:
  kind: ClusterRole
  name: logstash-elastic
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: logstash-elastic

