---
# Source: nri-bundle/charts/nri-kube-events/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
data:
  config.yaml: |-
    sinks:
    - name: newRelicInfra
      config:
        agentEndpoint: http://localhost:8001/v1/data
        clusterName: k8s-cluster-name
        agentHTTPTimeout: 30s
metadata:
  name: nri-bundle-nri-kube-events-config
  namespace: newrelic
  labels:
    app: nri-kube-events
    app.kubernetes.io/name: nri-kube-events
    helm.sh/chart: nri-kube-events-1.10.0
    app.kubernetes.io/version: "1.6.0"

---
# Source: nri-bundle/charts/nri-prometheus/templates/configmap.yaml
kind: ConfigMap
metadata:
  name: nri-bundle-nri-prometheus-config
  namespace: newrelic
  labels:
    app.kubernetes.io/name: nri-prometheus
    helm.sh/chart: nri-prometheus-1.10.0
    app.kubernetes.io/version: "2.9.0"
apiVersion: v1
data:
  config.yaml: |
    cluster_name: k8s-cluster-name
    audit: false
    insecure_skip_verify: false
    require_scrape_enabled_label_for_nodes: true
    scrape_enabled_label: prometheus.io/scrape
    scrape_endpoints: false
    scrape_services: true
    transformations:
    - description: Low data mode defaults
      ignore_metrics:
      - prefixes:
        - kube_
        - container_
        - machine_
        - cadvisor_
    verbose: false

---
# Source: nri-bundle/charts/newrelic-logging/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: newrelic
  labels:     
    app: newrelic-logging
    chart: newrelic-logging-1.10.0
    release: nri-bundle
    app.kubernetes.io/name: newrelic-logging
  name: nri-bundle-newrelic-logging-fluent-bit-config
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     ${LOG_LEVEL}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    [INPUT]
        Name              tail
        Tag               kube.*
        Path              ${PATH}
        Parser            ${LOG_PARSER}
        DB                ${FB_DB}
        Mem_Buf_Limit     7MB
        Skip_Long_Lines   On
        Refresh_Interval  10

    [FILTER]
        Name           kubernetes
        Match          kube.*
        # We need the full DNS suffix as Windows only supports resolving names with this suffix
        # See: https://kubernetes.io/docs/setup/production-environment/windows/intro-windows-in-kubernetes/#dns-limitations
        Kube_URL       https://kubernetes.default.svc.cluster.local:443
        K8S-Logging.Exclude ${K8S_LOGGING_EXCLUDE}
        Labels         Off
        Annotations    Off

    [FILTER]
        Name           nest
        Match          *
        Operation      lift
        Nested_under   kubernetes

    [FILTER]
        Name           record_modifier
        Match          *
        Record         cluster_name ${CLUSTER_NAME}
        Allowlist_key  container_name
        Allowlist_key  namespace_name
        Allowlist_key  pod_name
        Allowlist_key  stream
        Allowlist_key  log

    [OUTPUT]
        Name           newrelic
        Match          *
        licenseKey     ${LICENSE_KEY}
        endpoint       ${ENDPOINT}
        lowDataMode    ${LOW_DATA_MODE}

  parsers.conf: |
    # Relevant parsers retrieved from: https://github.com/fluent/fluent-bit/blob/master/conf/parsers.conf
    [PARSER]
        Name         docker
        Format       json
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L
        Time_Keep    On

    [PARSER]
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z

---
# Source: nri-bundle/charts/kube-state-metrics/templates/kubeconfig-secret.yaml

# New Relic Pingmetadata Integration
apiVersion: v1
data:
  pingmetadata.yaml: |
    ---
    integrations:
      - name: nri-flex
        # interval: 30s
        config:
          name: pingmetadata
          apis:
            - name: pingmetaDataOutput
              commands:
                # run any command, you could cat .json file, or run some commands that produce a json output
                # the example just calls an API that returns json
                - run: curl -sk https://metadata.${cde}-${customer}.${region}.${stage}.cloud #json output is retrieved from this command
              custom_attributes:
                pingCloudVersion: version
kind: ConfigMap
metadata:
  name: pingmetadata
  namespace: newrelic

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nri-default-integration-cfg # integrations config provided by default
  namespace: newrelic
data:
  nri-kubernetes-config.yml: |
    integration_name: com.newrelic.kubernetes
    instances:
      - name: nri-kubernetes
        command: metrics

---
# Custom Definition File to Set New Scrape Interval
apiVersion: v1
kind: ConfigMap
metadata:
  name: nri-kubernetes-definition-cfg
  namespace: newrelic
data:
  nri-kubernetes-definition.yml: |
    name: com.newrelic.kubernetes
    description: "This NR Infrastructure definition uses a non-default 20s interval"
    protocol_version: 2
    os: linux
    commands:
      metrics:
        command:
          - ./bin/nri-kubernetes
          - --metrics
        interval: 20

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: copy-secret
  namespace: newrelic
data:
  copy-secret.sh: |-
    #!/bin/sh

    cd /tmp

    kubectl get secret ${SECRET_NAME} \
        -n ${SECRET_NAMESPACE} \
        -o jsonpath='{.data.NEW_RELIC_LICENSE_KEY}' |
    base64 -d > NEW_RELIC_LICENSE_KEY

    kubectl create secret generic ${SECRET_NAME} \
        -n ${CURRENT_NAMESPACE} \
        --from-file=NEW_RELIC_LICENSE_KEY

    rm -f NEW_RELIC_LICENSE_KEY