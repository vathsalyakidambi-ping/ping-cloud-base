---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/job-createSecret.yaml

apiVersion: batch/v1
kind: Job
metadata:
  name: nri-bundle-nri-metadata-injection-admission-create
  namespace: newrelic
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
  labels:
    nri-bundle.version: 5.0.4
    app: nri-metadata-injection-admission-create
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: nri-metadata-injection-3.0.4
spec:
  ttlSecondsAfterFinished: 30
  template:
    metadata:
      name: nri-bundle-nri-metadata-injection-admission-create
      labels:
        nri-bundle.version: 5.0.4
        app: nri-metadata-injection-admission-create
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.7.0
        helm.sh/chart: nri-metadata-injection-3.0.4
    spec:
      containers:
        - name: create
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          imagePullPolicy: IfNotPresent
          args:
            - create
            - --host=nri-bundle-nri-metadata-injection,nri-bundle-nri-metadata-injection.newrelic.svc
            - --namespace=newrelic
            - --secret-name=nri-bundle-nri-metadata-injection-admission
            - --cert-name=tls.crt
            - --key-name=tls.key
      restartPolicy: OnFailure
      serviceAccountName: nri-bundle-nri-metadata-injection-admission
      securityContext:
        runAsGroup: 2000
        runAsUser: 2000
        runAsNonRoot: true

---
# Source: nri-bundle/charts/nri-metadata-injection/templates/admission-webhooks/job-patch/job-patchWebhook.yaml

apiVersion: batch/v1
kind: Job
metadata:
  name: nri-bundle-nri-metadata-injection-admission-patch
  namespace: newrelic
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation,HookSucceeded
  labels:
    nri-bundle.version: 5.0.4
    app: nri-metadata-injection-admission-patch
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.7.0
    helm.sh/chart: nri-metadata-injection-3.0.4
spec:
  ttlSecondsAfterFinished: 30
  template:
    metadata:
      name: nri-bundle-nri-metadata-injection-admission-patch
      labels:
        nri-bundle.version: 5.0.4
        app: nri-metadata-injection-admission-patch
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-metadata-injection
        app.kubernetes.io/version: 1.7.0
        helm.sh/chart: nri-metadata-injection-3.0.4
    spec:
      containers:
        - name: patch
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          imagePullPolicy: IfNotPresent
          args:
            - patch
            - --webhook-name=nri-bundle-nri-metadata-injection
            - --namespace=newrelic
            - --secret-name=nri-bundle-nri-metadata-injection-admission
            - --patch-failure-policy=Ignore
            - --patch-validating=false
      restartPolicy: OnFailure
      serviceAccountName: nri-bundle-nri-metadata-injection-admission
      securityContext:
        runAsGroup: 2000
        runAsUser: 2000
        runAsNonRoot: true

---
# This job copies NR License key secret object to 'newrelic' namespace

apiVersion: batch/v1
kind: Job
metadata:
  name: newrelic-license-secret-exporter
  namespace: newrelic
  labels:
    app: newrelic-license-secret-exporter
  annotations:
    argocd.argoproj.io/hook: Sync
spec:
  ttlSecondsAfterFinished: 30
  template:
    metadata:
      labels:
        app: newrelic-license-secret-exporter
      annotations: {}
    spec:
      restartPolicy: OnFailure
      serviceAccountName: nri-bundle-newrelic-infrastructure
      volumes:
        - name: copy-secret
          configMap:
            name: copy-secret
            defaultMode: 0555
      containers:
      - name: newrelic-license-secret-exporter
        securityContext:
          runAsGroup: 2000
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
        image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/bitnami/kubectl:1.23.0
        command:
          - /tmp/copy-secret.sh
        env:
          - name: "SECRET_NAME"
            value: "newrelic-license-key"
          - name: "SECRET_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: metadata.annotations['SECRET_NAMESPACE']
          - name: "CURRENT_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - name: copy-secret
            mountPath: /tmp/copy-secret.sh
            subPath: copy-secret.sh