apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: prom-webhook
spec:
  replicas: 2
  template:
    serviceAccountName: argo-events-sa
  dependencies:
    - name: trigger-slack
      eventSourceName: webhook
      eventName: prometheus
      transform:
        jq: 'if (.body.alerts[0].status == "firing") then .body.emoji = ":exclamation:" else .body.emoji = ":white_check_mark: " end'
      filters:
        data:
          - path: body.alerts.0.labels.notifications_enabled
            type: string
            value:
              - "true"
  triggers:
    - template:
        name: trigger-slack
        slack:
          channel: p1as-application-oncall # Can be overridden by setting PROMETHEUS_SLACK_CHANNEL in env_vars
          message: this is default message from argo-events
          slackToken:
            key: token
            name: slack-secret
      parameters:
        - src:
            dependencyName: trigger-slack
            dataTemplate: |-
              *Status*: {{ .Input.body.emoji }}{{ (index .Input.body.alerts 0).status }}
              *Description*: {{ (index .Input.body.alerts 0).annotations.description }}
              *Summary*: {{ (index .Input.body.alerts 0).annotations.summary }}
              *Cluster*: {{ (index .Input.body.alerts 0).labels.k8s_cluster_name }}
          dest: slack.message
        - src:
            dependencyName: trigger-slack
            dataKey: body.alerts.0.labels.slack_channel
          dest: slack.channel
