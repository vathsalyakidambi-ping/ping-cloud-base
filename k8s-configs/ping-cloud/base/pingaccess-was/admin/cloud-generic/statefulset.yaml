# This defines the pingaccess-was admin deployment.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pingaccess-was-admin
  labels:
    cluster: pingaccess-was-cluster
    role: pingaccess-was-admin
spec:
  selector:
    matchLabels:
      role: pingaccess-was-admin
  replicas: 1
  serviceName: pingaccess-was-admin
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: OrderedReady
  template:
    metadata:
      name: pingaccess-was-admin
      labels:
        cluster: pingaccess-was-cluster
        role: pingaccess-was-admin
      annotations:
        lastUpdateReason: "NA"
    spec:
      serviceAccount: ping-serviceaccount
      initContainers:
      - name: pingaccess-was-p14c-init
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        image: public.ecr.aws/r2h3l6e4/pingcloud-services/p14c-integration:v1.4.0
        imagePullPolicy: IfNotPresent
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        command: [ 'python3', '-u', '/app/pingaccess_was_p1_init.py' ]
        volumeMounts:
        - name: data-dir
          mountPath: /opt/staging
      - name: pingaccess-was-init
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        image: public.ecr.aws/r2h3l6e4/bitnami/kubectl:1.15.3
        imagePullPolicy: IfNotPresent
        command:
        - /copy-dependencies.sh
        volumeMounts:
        - name: ssh-dir
          mountPath: /.ssh
        - name: data-dir
          mountPath: /data
        - name: ssh-id-key-secret
          mountPath: /id_rsa
          subPath: id_rsa
        - name: known-hosts-config
          mountPath: /known_hosts
          subPath: known_hosts
        - name: pingaccess-was-init
          mountPath: /copy-dependencies.sh
          subPath: copy-dependencies.sh
        - name: pingaccess-was-init
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: data-dir
          mountPath: /opt/staging/p14c_env_vars
          subPath: p14c_env_vars
        envFrom:
        - configMapRef:
            name: pingaccess-was-admin-environment-variables
      - name: wait-for-services
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        image: public.ecr.aws/r2h3l6e4/busybox:1.32
        imagePullPolicy: IfNotPresent
        command:
        - /wait-for-services.sh
        volumeMounts:
        - name: pingaccess-was-init
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: pingaccess-was-init
          mountPath: /wait-for-services.sh
          subPath: wait-for-services.sh
        envFrom:
        - configMapRef:
            name: pingaccess-was-admin-environment-variables
      - name: newrelic-tags-exporter
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        image: public.ecr.aws/r2h3l6e4/pingcloud-monitoring/newrelic-tags-exporter:v1.1.0
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: pingaccess-was-admin-environment-variables
        - secretRef:
            name: newrelic-license-key
            optional: false
        env:
        - name: NEW_RELIC_APP_NAME
          value: "pingaccess-was-admin"
        - name: METADATA_EP_URL
          value: "http://metadata:5000"
        - name: NEW_RELIC_CONFIG_FILEPATH
          value: "/opt/shared-dir/newrelic.yml"
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        volumeMounts:
        - name: shared-dir
          mountPath: /opt/shared-dir
      containers:
      - name: pingaccess-was-admin
        image: public.ecr.aws/r2h3l6e4/pingcloud-apps/pingaccess-was:6.3.3-v1.0.25
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "1280Mi"
            cpu: "20m"
          limits:
            memory: "2560Mi"
            cpu: "1"
        volumeMounts:
        - name: ssh-dir
          mountPath: /home/ping/.ssh
        - name: shared-dir
          mountPath: /opt/shared-dir
        - name: topology-descriptor
          mountPath: /opt/staging/topology/descriptor.json
          subPath: descriptor.json
        - name: data-dir
          mountPath: /usr/local/bin/kubectl
          subPath: kubectl
        - name: data-dir
          mountPath: /usr/local/bin/skbn
          subPath: skbn
        - name: data-dir
          mountPath: /opt/staging/newrelic.jar
          subPath: newrelic.jar
        - name: out-dir
          mountPath: /opt/out
        - name: pingaccess-was-license
          mountPath: /opt/in/instance/conf/pingaccess.lic
          subPath: pingaccess.lic
        - name: data-dir
          mountPath: /opt/staging/ds_env_vars
          subPath: ds_env_vars
        - name: data-dir
          mountPath: /opt/staging/p14c_env_vars
          subPath: p14c_env_vars
        readinessProbe:
          exec:
            command: [ /opt/staging/hooks/85-pa-admin-readiness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 5
          failureThreshold: 3
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command: [ /opt/staging/hooks/99-pa-admin-liveness.sh ]
          initialDelaySeconds: 60
          periodSeconds: 30
          failureThreshold: 3
          timeoutSeconds: 5
        ports:
        - containerPort: 9000
        - containerPort: 9090
        env:
        - name: OPERATIONAL_MODE
          value: CLUSTERED_CONSOLE
        - name: HTTPS_PORT
          value: "9090"
        - name: OLD_PA_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingaccess-was-passwords
              key: OLD_PA_ADMIN_USER_PASSWORD
        - name: PA_ADMIN_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingaccess-was-passwords
              key: PA_ADMIN_USER_PASSWORD
        - name: P14C_ISSUER
          valueFrom:
            secretKeyRef:
              name: pingaccess-was-passwords
              key: P14C_ISSUER
        - name: P14C_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: pingaccess-was-passwords
              key: P14C_CLIENT_ID
        - name: P14C_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: pingaccess-was-passwords
              key: P14C_CLIENT_SECRET
        - name: NEW_RELIC_CONFIG_FILE
          value: "/opt/shared-dir/newrelic.yml"
        - name: LOG4J_FORMAT_MSG_NO_LOOKUPS
          value: "true"
        envFrom:
        - configMapRef:
            name: pingaccess-was-admin-environment-variables
        - secretRef:
            name: newrelic-license-key
            optional: false
      securityContext:
        fsGroup: 9999
      volumes:
      - name: ssh-dir
        emptyDir: {}
      - name: shared-dir
        emptyDir: {}
      - name: data-dir
        emptyDir: {}
      - name: pingaccess-was-init
        configMap:
          name: pingcommon-init
          defaultMode: 0555
      - name: topology-descriptor
        configMap:
          name: topology-descriptor
          optional: true
          defaultMode: 0644
      - name: ssh-id-key-secret
        secret:
          secretName: ssh-id-key-secret
          optional: true
          defaultMode: 0400
      - name: known-hosts-config
        configMap:
          name: known-hosts-config
          optional: true
          defaultMode: 0644
      - name: out-dir
        persistentVolumeClaim:
          claimName: out-dir
      - name: pingaccess-was-license
        secret:
          secretName: pingaccess-was-license
          optional: true
          defaultMode: 0400
      - name: pingaccess-was-passwords
        secret:
          secretName: pingaccess-was-passwords
          optional: true
          defaultMode: 0400
  volumeClaimTemplates:
  - metadata:
      name: out-dir
    spec:
      accessModes:
      - ReadWriteOnce
      storageClassName: pingaccess-was-gp2
      resources:
        requests:
          storage: 20Gi
