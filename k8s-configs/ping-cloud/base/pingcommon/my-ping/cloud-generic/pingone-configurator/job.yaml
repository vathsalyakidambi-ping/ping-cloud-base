apiVersion: batch/v1
kind: Job
metadata:
  name: pingone-configurator
  annotations:
    argocd.argoproj.io/hook: Sync
spec:
  ttlSecondsAfterFinished: 30
  template:
    spec:
      serviceAccount: p1-config-serviceaccount
      initContainers:
      - name: wait-for-services
        securityContext:
          runAsGroup: 9999
          runAsNonRoot: true
          runAsUser: 9031
        image: public.ecr.aws/r2h3l6e4/busybox:1.32
        imagePullPolicy: IfNotPresent
        command:
          - /wait-for-services.sh
        volumeMounts:
        - name: pingone-config
          mountPath: /utils.lib.sh
          subPath: utils.lib.sh
        - name: pingone-config
          mountPath: /wait-for-services.sh
          subPath: wait-for-services.sh
        env:
        - name: WAIT_FOR_SERVICES
          value: "pingfederate-cluster"
        envFrom:
        - configMapRef:
            name: pingfederate-admin-environment-variables
      containers:
      - name: pingone-configurator
        image: public.ecr.aws/r2h3l6e4/pingcloud-solutions/ansible-beluga:v1.0.2
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: "256Mi"
            cpu: "300m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: ENVIRONMENT_METADATA_JSON
          valueFrom:
            configMapKeyRef:
              name: p14c-environment-metadata
              key: information.json
              optional: true
        - name: PF_USERNAME
          value: Administrator
        - name: PF_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pingcommon-passwords
              key: PF_ADMIN_USER_PASSWORD
        envFrom:
        - configMapRef:
            name: pingfederate-admin-environment-variables
        - secretRef:
            name: p14c-bootstrap-secret
      restartPolicy: Never
      volumes:
      - name: pingone-config
        configMap:
          name: pingcommon-init
          defaultMode: 0555
  backoffLimit: 4
