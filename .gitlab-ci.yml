workflow:
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[skip pipeline\]/
      when: never
    - if: $CI_MERGE_REQUEST_ID
      when: never
    - when: always

## Pipeline stages ##
stages:
- compile
- find-cluster
- deploy
- unit-test
- pa-was-test
- integration-test
- chaos
- cleanup

## Global environment variables ##
variables:
  DELETE_ENV_AFTER_PIPELINE: 'true'
  CLUSTER_POSTFIXES: '_5 _6 _7'
  PINGONE_DEPLOY: $PINGONE_DEPLOY
  K8S_DEPLOY_TOOLS: docker.corp.pingidentity.com:5000/platform-pipeline/k8s-deploy-tools:2.5.0

## Compile stage ##
compile:
 stage: compile
 tags:
   - default-gitlab-runner
 image: ${K8S_DEPLOY_TOOLS}
 script:
   - ./ci-scripts/compile/compile.sh

## Find cluster stage ##
find-cluster:
  stage: find-cluster
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ./ci-scripts/deploy/find_cluster.sh
  artifacts:
    reports:
      dotenv: cluster.env

## Deploy stage ##
deploy:
  stage: deploy
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ./ci-scripts/deploy/deploy.sh
  dependencies:
    - find-cluster

p1-deploy:
  stage: deploy
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - sleep 30 #sleep so that the kubectl apply doesn't execute at the same time as the deploy job
    - PINGONE=true ./ci-scripts/deploy/deploy.sh
  dependencies:
    - find-cluster
  only:
    variables:
      - $PINGONE_DEPLOY == "true"

## Unit tests have moved into ping-cloud-docker (PDO-1739) ##

## PA-WAS stage ##
pa-was-integration-tests:
  stage: pa-was-test
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ./ci-scripts/test/integration/run-integration-tests.sh pingaccess-was
  dependencies:
    - find-cluster

p1-pa-was-integration-tests:
  stage: pa-was-test
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - sleep 30 #sleep because both pa-was tests running at the exact same time conflicts
    - PINGONE=true ./ci-scripts/test/integration/run-integration-tests.sh pingaccess-was
  dependencies:
    - find-cluster
  only:
    variables:
      - $PINGONE_DEPLOY == "true"

 ## Integration Test stage ##

################################################
# All integration tests defined to run on the  #
# traditionally deployed P1AS                  #
################################################
.all-tests: &all-tests
  - pingdirectory
  - pingdelegator
  - pingfederate
  - pingaccess
  - pingcloud-services
  - pingcentral
  - pingdatasync
  - common
  - monitoring
  - health

################################################
# All integration tests defined to run on the  #
# PingOne deployed P1AS                        #
################################################
.all-p1-tests: &all-p1-tests
  - pingcloud-services
  - common
  - pingone

.integration-tests-base:
  variables:
    TEST: ""
  stage: integration-test
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ./ci-scripts/test/integration/run-integration-tests.sh ${TEST}
  dependencies:
    - find-cluster

integration-tests:
  extends: .integration-tests-base
  variables:
    TEST: ${TEST}
  parallel:
    matrix:
      - TEST: *all-tests

.p1-integration-tests-base:
  variables:
    TEST: ""
  stage: integration-test
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - sleep 30 #sleep so that simultaneous tests don't conflict
    - PINGONE=true ./ci-scripts/test/integration/run-integration-tests.sh ${TEST}
  dependencies:
    - find-cluster
  only:
    variables:
      - $PINGONE_DEPLOY == "true"
  artifacts:
    name: "integration_test_logs"
    paths:
      - ci-scripts/test/integration/pingone/latest_logs/
    when: on_failure

p1-integration-tests:
  extends: .p1-integration-tests-base
  variables:
    TEST: ${TEST}
  parallel:
    matrix:
      - TEST: *all-p1-tests

## Chaos testing stage ##
chaos-tests:
  stage: chaos
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ./ci-scripts/test/integration/run-integration-tests.sh chaos
  dependencies:
    - find-cluster

p1-chaos-tests:
  stage: chaos
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - PINGONE=true ./ci-scripts/test/integration/run-integration-tests.sh chaos
  dependencies:
    - find-cluster
  only:
    variables:
      - $PINGONE_DEPLOY == "true"

## Cleanup stage ##
cleanup:
  stage: cleanup
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - ./ci-scripts/cleanup/teardown.sh
  dependencies:
    - find-cluster

p1-cleanup:
  stage: cleanup
  tags:
    - default-gitlab-runner
  image: ${K8S_DEPLOY_TOOLS}
  script:
    - PINGONE=true ./ci-scripts/cleanup/teardown.sh
  dependencies:
    - find-cluster
  only:
    variables:
      - $PINGONE_DEPLOY == "true"


